#!/bin/bash -l

#DUnit Version
dunitVersion="v1.2.1"

# internal script variables
script=$(readlink -f $0)
scriptPath=`dirname ${script}`
workingPath=$(pwd)

# default variables
source "${scriptPath}/.dunitconfig.dist"

# config path
configPath="${workingPath}/.dunitconfig"

# getopt That allows the options to be passed
while getopts ":hp:c:v" opt; do
  shift $((OPTIND-1))
  case ${opt} in
    h)
      printf "Options:\n"
      printf "%-20s %-40s\n" '-c' 'Pass in a custom .dunit.config file'
      printf "%-20s %-40s\n" '-h' 'Displays help information'
      printf "%-20s %-40s\n" '-p' 'PHP Versions you wish to use (default: "5.3 5.4 5.5 5.6")'
      printf "%-20s %-40s\n" '-v' 'Displays DUnit version'
      exit 0;
      ;;
    v)
      printf "DUnit version ${dunitVersion}\n"
      exit 0;
      ;;
    p)
      DUNIT_PHPVERSION=$OPTARG
      ;;
    c)
      configPath=$OPTARG
      ;;
    \?)
      printf "Invalid option: -$OPTARG\n"
      exit 1
      ;;
    :)
      printf "Option -$OPTARG requires an argument.\n"
      exit 1
      ;;
  esac
done

# config and global overwrite
if [ -a "${configPath}" ];
  then source ${configPath}
fi;

# allow path to be passed to docker for mounting
if [ -n "$1" ];
  then workingPath="${workingPath}/$1";
fi

# check if they have docker
command -v docker >/dev/null 2>&1 || { printf >&2 "Docker is required to run the test suite against multiple versions of PHP.\nPlease just use ./vendor/bin/phpunit.\n"; exit 1; }

# spin up containers for the versions we're testing against
for version in ${DUNIT_PHPVERSION}; do
  printf "\nRunning on PHP %s\n" ${version}
  if [ $DUNIT_PHPSYNTAX == true ]; then
    echo "Checking syntax"
    eval "docker run -v ${workingPath}:/opt/source -i -t -w /opt/source ${DUNIT_DOCKERIMAGE}${version} bash -c \" ${DUNIT_PHPSYNTAXCOMMAND} \""
  fi
  if [ $DUNIT_PHPUNIT == true ]; then
    echo "Running unit test suite"
    eval "docker run -v ${workingPath}:/opt/source -i -t -w /opt/source ${DUNIT_DOCKERIMAGE}${version} bash -c \" ${DUNIT_PHPUNITCOMMAND} \""
  fi
done
